package org.example.gnucashapi.write.gen.simple;

import java.io.File;
import java.time.LocalDateTime;

import org.gnucash.api.read.GnuCashCustomer;
import org.gnucash.api.read.GnuCashGenerJob;
import org.gnucash.api.read.GnuCashVendor;
import org.gnucash.api.read.OwnerNotFoundException;
import org.gnucash.api.read.TaxTableNotFoundException;
import org.gnucash.api.write.impl.GnuCashWritableFileImpl;
import org.gnucash.api.write.spec.GnuCashWritableCustomerJob;
import org.gnucash.api.write.spec.GnuCashWritableVendorJob;
import org.gnucash.base.basetypes.simple.GCshCustID;
import org.gnucash.base.basetypes.simple.GCshVendID;

public class GenJob {
    enum JobType {
    	CUSTOMER, 
    	VENDOR
    }

    // -----------------------------------------------------------------

    // BEGIN Example data -- adapt to your needs
    private static String gcshInFileName  = "example_in.gnucash";
    private static String gcshOutFileName = "example_out.gnucash";
    private static JobType type           = JobType.CUSTOMER;
    private static GCshCustID custID      = new GCshCustID("1d2081e8a10e4d5e9312d9fff17d470d");
    private static GCshVendID vendID      = new GCshVendID("bc1c7a6d0a6c4b4ea7dd9f8eb48f79f7");
    private static String number          = "1234";
    private static String name            = "Jobbo McJob";
    // END Example data

    // -----------------------------------------------------------------

    public static void main(String[] args) {
		try {
			GenJob tool = new GenJob();
			tool.kernel();
		} catch (Exception exc) {
			System.err.println("Execution exception. Aborting.");
			exc.printStackTrace();
			System.exit(1);
		}
	}

	protected void kernel() throws Exception {
		GnuCashWritableFileImpl gcshFile = new GnuCashWritableFileImpl(new File(gcshInFileName));

		GnuCashGenerJob job = null;
		if ( type == JobType.CUSTOMER )
			job = doCustomer(gcshFile);
		else if ( type == JobType.VENDOR )
			job = doVendor(gcshFile);

		System.out.println("Job to write: " + job.toString());
		gcshFile.writeFile(new File(gcshOutFileName));
		System.out.println("OK");
	}

	// -----------------------------------------------------------------

	private GnuCashWritableCustomerJob doCustomer(GnuCashWritableFileImpl gcshFile) throws OwnerNotFoundException {
		GnuCashCustomer cust = null;
		try {
			cust = gcshFile.getWritableCustomerByID(custID);
			System.err.println("Customer: " + cust.getNumber() + " (" + cust.getName() + ")");
		} catch (Exception exc) {
			System.err.println("Error: No customer with ID '" + custID + "' found");
			throw new OwnerNotFoundException();
		}

		GnuCashWritableCustomerJob job = gcshFile.createWritableCustomerJob(cust, number, name);
		job.setName("Generated by GenJob " + LocalDateTime.now().toString());

		return job;
	}

	private GnuCashWritableVendorJob doVendor(GnuCashWritableFileImpl gcshFile)
			throws OwnerNotFoundException, TaxTableNotFoundException {
		GnuCashVendor vend = null;
		try {
			vend = gcshFile.getVendorByID(vendID);
			System.err.println("Vendor: " + vend.getNumber() + " (" + vend.getName() + ")");
		} catch (Exception exc) {
			System.err.println("Error: No vendor with ID '" + vendID + "' found");
			throw new OwnerNotFoundException();
		}

		GnuCashWritableVendorJob job = gcshFile.createWritableVendorJob(vend, number, name);
		job.setName("Generated by GenJob " + LocalDateTime.now().toString());

		return job;
	}
}
